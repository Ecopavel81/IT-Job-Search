import aiosmtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.application import MIMEApplication
import os
from typing import Optional
from models import Job, Application

class EmailService:
    def __init__(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.smtp_host = os.getenv('SMTP_HOST', 'smtp.gmail.com')
        self.smtp_port = int(os.getenv('SMTP_PORT', 587))
        self.smtp_user = os.getenv('SMTP_USER')
        self.smtp_password = os.getenv('SMTP_PASSWORD')
        self.from_email = os.getenv('FROM_EMAIL', self.smtp_user)
    
    async def send_application_email(
        self, 
        job: Job, 
        application: Application, 
        resume_path: str
    ) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é"""
        try:
            # –°–æ–∑–¥–∞—ë–º multipart —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = MIMEMultipart()
            message['From'] = self.from_email
            message['To'] = job.contact_email
            message['Subject'] = f"–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é: {job.title} - {application.name}"
            
            # –¢–µ–ª–æ –ø–∏—Å—å–º–∞
            body = self._create_email_body(job, application)
            message.attach(MIMEText(body, 'html'))
            
            # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ä–µ–∑—é–º–µ
            if os.path.exists(resume_path):
                with open(resume_path, 'rb') as f:
                    resume_attachment = MIMEApplication(f.read(), _subtype='pdf')
                    resume_attachment.add_header(
                        'Content-Disposition', 
                        'attachment', 
                        filename=os.path.basename(resume_path)
                    )
                    message.attach(resume_attachment)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
            await aiosmtplib.send(
                message,
                hostname=self.smtp_host,
                port=self.smtp_port,
                start_tls=True,
                username=self.smtp_user,
                password=self.smtp_password
            )
            
            print(f"‚úÖ –û—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {job.contact_email}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
            return False
    
    def _create_email_body(self, job: Job, application: Application) -> str:
        """–°–æ–∑–¥–∞—Ç—å HTML —Ç–µ–ª–æ –ø–∏—Å—å–º–∞"""
        return f"""
        <html>
        <head>
            <style>
                body {{
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                }}
                .container {{
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                }}
                .header {{
                    background-color: #4F46E5;
                    color: white;
                    padding: 20px;
                    border-radius: 8px 8px 0 0;
                }}
                .content {{
                    background-color: #f9fafb;
                    padding: 20px;
                    border-radius: 0 0 8px 8px;
                }}
                .info-block {{
                    background-color: white;
                    padding: 15px;
                    margin: 10px 0;
                    border-radius: 6px;
                    border-left: 4px solid #4F46E5;
                }}
                .label {{
                    font-weight: bold;
                    color: #4F46E5;
                }}
                .message-box {{
                    background-color: white;
                    padding: 15px;
                    margin: 15px 0;
                    border-radius: 6px;
                    border: 1px solid #e5e7eb;
                }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h2>üéØ –ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é</h2>
                    <p>{job.title} –≤ {job.company}</p>
                </div>
                
                <div class="content">
                    <div class="info-block">
                        <p><span class="label">üë§ –ò–º—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:</span> {application.name}</p>
                        <p><span class="label">üìß Email:</span> <a href="mailto:{application.email}">{application.email}</a></p>
                        {f'<p><span class="label">üì± –¢–µ–ª–µ—Ñ–æ–Ω:</span> {application.phone}</p>' if application.phone else ''}
                    </div>
                    
                    <div class="info-block">
                        <p><span class="label">üíº –í–∞–∫–∞–Ω—Å–∏—è:</span> {job.title}</p>
                        <p><span class="label">üè¢ –ö–æ–º–ø–∞–Ω–∏—è:</span> {job.company}</p>
                        <p><span class="label">üìç –õ–æ–∫–∞—Ü–∏—è:</span> {job.location}</p>
                        <p><span class="label">üìÖ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</span> {job.posted_date}</p>
                    </div>
                    
                    <div class="message-box">
                        <p class="label">üí¨ –°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ:</p>
                        <p style="white-space: pre-wrap;">{application.message}</p>
                    </div>
                    
                    <p style="margin-top: 20px; color: #6b7280; font-size: 14px;">
                        üìé –†–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ –∫ —ç—Ç–æ–º—É –ø–∏—Å—å–º—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.
                    </p>
                    
                    <hr style="margin: 20px 0; border: none; border-top: 1px solid #e5e7eb;">
                    
                    <p style="color: #6b7280; font-size: 12px; text-align: center;">
                        –≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π<br>
                        –ò—Å—Ç–æ—á–Ω–∏–∫ –≤–∞–∫–∞–Ω—Å–∏–∏: {job.source}
                    </p>
                </div>
            </div>
        </body>
        </html>
        """
    
    async def send_confirmation_email(self, application: Application, job: Job) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—É"""
        try:
            message = MIMEMultipart()
            message['From'] = self.from_email
            message['To'] = application.email
            message['Subject'] = f"–í–∞—à –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é {job.title} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
            
            body = f"""
            <html>
            <body style="font-family: Arial, sans-serif; line-height: 1.6;">
                <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                    <h2 style="color: #4F46E5;">‚úÖ –í–∞—à –æ—Ç–∫–ª–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!</h2>
                    
                    <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {application.name}!</p>
                    
                    <p>–í–∞—à –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é <strong>{job.title}</strong> –≤ –∫–æ–º–ø–∞–Ω–∏–∏ 
                    <strong>{job.company}</strong> —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é.</p>
                    
                    <div style="background-color: #f3f4f6; padding: 15px; border-radius: 6px; margin: 20px 0;">
                        <p><strong>üìß Email —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è:</strong> {job.contact_email}</p>
                        <p><strong>üí¨ Telegram:</strong> {job.contact_telegram}</p>
                    </div>
                    
                    <p>–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ –≤–∞—à–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä–∞ 
                    –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞.</p>
                    
                    <p style="color: #6b7280; font-size: 14px; margin-top: 30px;">
                        –£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ —Ä–∞–±–æ—Ç—ã!<br>
                        –ö–æ–º–∞–Ω–¥–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
                    </p>
                </div>
            </body>
            </html>
            """
            
            message.attach(MIMEText(body, 'html'))
            
            await aiosmtplib.send(
                message,
                hostname=self.smtp_host,
                port=self.smtp_port,
                start_tls=True,
                username=self.smtp_user,
                password=self.smtp_password
            )
            
            print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {application.email}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {e}")
            return False
    
    async def send_status_update(
        self, 
        application: Application, 
        job: Job, 
        new_status: str
    ) -> bool:
        """–£–≤–µ–¥–æ–º–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        try:
            status_messages = {
                'viewed': '–í–∞—à–µ —Ä–µ–∑—é–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º',
                'accepted': 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä–∞ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è',
                'rejected': '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥—Ä—É–≥–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞'
            }
            
            message = MIMEMultipart()
            message['From'] = self.from_email
            message['To'] = application.email
            message['Subject'] = f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ {job.title}"
            
            body = f"""
            <html>
            <body style="font-family: Arial, sans-serif;">
                <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                    <h2 style="color: #4F46E5;">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–∞—à–µ–≥–æ –æ—Ç–∫–ª–∏–∫–∞</h2>
                    
                    <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {application.name}!</p>
                    
                    <div style="background-color: #f3f4f6; padding: 15px; border-radius: 6px; margin: 20px 0;">
                        <p><strong>–í–∞–∫–∞–Ω—Å–∏—è:</strong> {job.title}</p>
                        <p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> {job.company}</p>
                        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {status_messages.get(new_status, new_status)}</p>
                    </div>
                    
                    <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!</p>
                </div>
            </body>
            </html>
            """
            
            message.attach(MIMEText(body, 'html'))
            
            await aiosmtplib.send(
                message,
                hostname=self.smtp_host,
                port=self.smtp_port,
                start_tls=True,
                username=self.smtp_user,
                password=self.smtp_password
            )
            
            print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {application.email}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            return False